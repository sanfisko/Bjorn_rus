#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ WiFi –∞–≤—Ç–æ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∫ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –≤—ã–≥–ª—è–¥–∏—Ç –Ω–∞ —ç–∫—Ä–∞–Ω–µ –≤ —Ä–∞–∑–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö
"""

import sys
import os
from PIL import Image, ImageDraw, ImageFont
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def create_screen_demo(status, title):
    """–°–æ–∑–¥–∞–µ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é —ç–∫—Ä–∞–Ω–∞ —Å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–º"""
    
    # –†–∞–∑–º–µ—Ä—ã —ç–∫—Ä–∞–Ω–∞ Bjorn
    width, height = 122, 250
    scale_factor_x = width / 122
    scale_factor_y = height / 250
    
    # –°–æ–∑–¥–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    image = Image.new('1', (width, height), 255)  # –ë–µ–ª—ã–π —Ñ–æ–Ω
    draw = ImageDraw.Draw(image)
    
    # –†–∏—Å—É–µ–º –≥—Ä–∞–Ω–∏—Ü—ã —ç–∫—Ä–∞–Ω–∞
    draw.rectangle((0, 0, width-1, height-1), outline=0)
    
    # –†–∏—Å—É–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏ (–∫–∞–∫ –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–º —ç–∫—Ä–∞–Ω–µ)
    draw.line((0, 20, width-1, 20), fill=0)  # –í–µ—Ä—Ö–Ω—è—è —Å—Ç—Ä–æ–∫–∞
    draw.line((0, 59, width-1, 59), fill=0)  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
    draw.line((0, 87, width-1, 87), fill=0)  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —à—Ä–∏—Ñ—Ç
    try:
        font = ImageFont.load_default()
    except:
        font = None
    
    # –†–∏—Å—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    draw.text((2, 2), "BJORN WiFi Demo", font=font, fill=0)
    
    # –†–∏—Å—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç (–∏–º–∏—Ç–∞—Ü–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞)
    draw.text((2, 25), "Status: Active", font=font, fill=0)
    draw.text((2, 40), "Mode: Monitor", font=font, fill=0)
    
    # –†–∏—Å—É–µ–º —Ç–µ–∫—Å—Ç IDLE –∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä WiFi
    draw.text((8, 65), "IDLE", font=font, fill=0)
    
    # –ü–æ–∑–∏—Ü–∏—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Å–ø—Ä–∞–≤–∞)
    indicator_x = int(110 * scale_factor_x)
    indicator_y = int(65 * scale_factor_y)
    
    # –†–∏—Å—É–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
    if status == "running":
        # –ß–µ—Ä–Ω—ã–π –∫—Ä—É–≥ —Å "R"
        draw.ellipse((indicator_x, indicator_y, indicator_x+10, indicator_y+10), fill=0)
        draw.text((indicator_x+3, indicator_y+2), "R", font=font, fill=255)
        status_text = "WiFi script running"
        
    elif status == "connecting":
        # –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä (—Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫)
        points = [(indicator_x+2, indicator_y), (indicator_x+8, indicator_y+5), (indicator_x+2, indicator_y+10)]
        draw.polygon(points, fill=0)
        draw.text((indicator_x+3, indicator_y+3), "‚Üí", font=font, fill=255)
        status_text = "Connecting to WiFi"
        
    elif status == "connected":
        # –ß–µ—Ä–Ω—ã–π –∫–≤–∞–¥—Ä–∞—Ç —Å "C"
        draw.rectangle((indicator_x, indicator_y, indicator_x+10, indicator_y+10), fill=0)
        draw.text((indicator_x+3, indicator_y+2), "C", font=font, fill=255)
        status_text = "Connected to WiFi"
        
    elif status == "failed":
        # –ö—Ä–∞—Å–Ω—ã–π X (–∏–º–∏—Ç–∞—Ü–∏—è —á–µ—Ä–Ω—ã–º)
        draw.line((indicator_x+2, indicator_y+2, indicator_x+8, indicator_y+8), fill=0)
        draw.line((indicator_x+8, indicator_y+2, indicator_x+2, indicator_y+8), fill=0)
        draw.rectangle((indicator_x, indicator_y, indicator_x+10, indicator_y+10), outline=0)
        status_text = "Connection failed"
        
    elif status == "waiting":
        # –¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ —Å "W"
        points = [(indicator_x, indicator_y+10), (indicator_x+5, indicator_y), (indicator_x+10, indicator_y+10)]
        draw.polygon(points, fill=0)
        draw.text((indicator_x+3, indicator_y+6), "W", font=font, fill=255)
        status_text = "Waiting for retry"
        
    elif status == "scanning":
        # –ö—Ä—É–≥ —Å —Ç–æ—á–∫–∞–º–∏ (–∏–º–∏—Ç–∞—Ü–∏—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è)
        draw.ellipse((indicator_x, indicator_y, indicator_x+10, indicator_y+10), outline=0)
        draw.point((indicator_x+3, indicator_y+3), fill=0)
        draw.point((indicator_x+7, indicator_y+3), fill=0)
        draw.point((indicator_x+5, indicator_y+7), fill=0)
        status_text = "Scanning networks"
        
    elif status == "stopped":
        # –ü—É—Å—Ç–æ–π –∫–≤–∞–¥—Ä–∞—Ç —Å "S"
        draw.rectangle((indicator_x, indicator_y, indicator_x+10, indicator_y+10), outline=0, fill=255)
        draw.text((indicator_x+3, indicator_y+2), "S", font=font, fill=0)
        status_text = "WiFi script stopped"
    
    # –†–∏—Å—É–µ–º —Å—Ç–∞—Ç—É—Å –≤–Ω–∏–∑—É
    draw.text((2, 95), status_text, font=font, fill=0)
    
    # –†–∏—Å—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–∑–∏—Ü–∏–∏
    draw.text((2, 110), f"Pos: ({indicator_x}, {indicator_y})", font=font, fill=0)
    draw.text((2, 125), f"Distance from edge: {width - indicator_x - 10}px", font=font, fill=0)
    
    # –†–∏—Å—É–µ–º —Å—Ç—Ä–µ–ª–∫—É —É–∫–∞–∑—ã–≤–∞—é—â—É—é –Ω–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
    draw.line((indicator_x-15, indicator_y+5, indicator_x-2, indicator_y+5), fill=0)
    draw.polygon([(indicator_x-2, indicator_y+3), (indicator_x-2, indicator_y+7), (indicator_x+1, indicator_y+5)], fill=0)
    
    return image

def main():
    """–°–æ–∑–¥–∞–µ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é –≤—Å–µ—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞"""
    
    print("=== –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ WiFi ===")
    print("–°–æ–∑–¥–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –≤—Å–µ—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π...")
    
    # –í—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    statuses = [
        ("running", "–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω"),
        ("connecting", "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ"),
        ("connected", "–ü–æ–¥–∫–ª—é—á–µ–Ω"),
        ("failed", "–û—à–∏–±–∫–∞"),
        ("waiting", "–û–∂–∏–¥–∞–Ω–∏–µ"),
        ("scanning", "–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"),
        ("stopped", "–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    ]
    
    # –°–æ–∑–¥–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    for status, title in statuses:
        image = create_screen_demo(status, title)
        filename = f"demo_indicator_{status}.png"
        image.save(filename)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ: {filename} - {title}")
    
    # –°–æ–∑–¥–∞–µ–º —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    print("\n–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...")
    
    # –°–æ–∑–¥–∞–µ–º –±–æ–ª—å—à–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    comparison_width = 122 * 4  # 4 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ä—è–¥
    comparison_height = 250 * 2  # 2 —Ä—è–¥–∞
    comparison = Image.new('1', (comparison_width, comparison_height), 255)
    
    # –†–∞–∑–º–µ—â–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    positions = [
        (0, 0), (122, 0), (244, 0), (366, 0),  # –ü–µ—Ä–≤—ã–π —Ä—è–¥
        (0, 250), (122, 250), (244, 250)       # –í—Ç–æ—Ä–æ–π —Ä—è–¥
    ]
    
    for i, (status, title) in enumerate(statuses):
        if i < len(positions):
            image = create_screen_demo(status, title)
            x, y = positions[i]
            comparison.paste(image, (x, y))
    
    comparison.save("demo_all_indicators.png")
    print("‚úÖ –°–æ–∑–¥–∞–Ω–æ: demo_all_indicators.png - –í—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è")
    
    print("\n=== –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ===")
    print("üìç –ü–æ–∑–∏—Ü–∏—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞: (110, 65) - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Å–ø—Ä–∞–≤–∞")
    print("üìè –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –ø—Ä–∞–≤–æ–≥–æ –∫—Ä–∞—è: 2 –ø–∏–∫—Å–µ–ª—è")
    print("üì± –†–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–∞: 122x250 –ø–∏–∫—Å–µ–ª–µ–π")
    print("üéØ –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ä–∞–∑–º–µ—Ä–æ–º: 10x10 –ø–∏–∫—Å–µ–ª–µ–π")
    
    print("\nüìÑ –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:")
    for status, _ in statuses:
        print(f"   - demo_indicator_{status}.png")
    print("   - demo_all_indicators.png")

if __name__ == "__main__":
    main()